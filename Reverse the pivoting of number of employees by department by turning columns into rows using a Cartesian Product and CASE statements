Exercise #1: Reverse the pivoting of number of employees by department by turning columns into rows.


Solution #1: We reverse the pivoting of number of employees by department using a Cartesian Product and CASE statements.

Tables used:
[AdventureWorks2022].[HumanResources].[Employee]
[AdventureWorks2022].[HumanResources].[EmployeeDepartmentHistory]
[AdventureWorks2022].[HumanResources].[Department]

	Query #1: Create a VIEW that has the number of employees by department
	---------
We first create the view called "VIEW_CountNumberEmployeesByDepartment" with dimension 1 row X 16 columns that stores the number of employees by department that we wish to unpivot.


IF OBJECT_ID(N'VIEW_CountNumberEmployeesByDepartment',N'V') IS NOT NULL
DROP VIEW VIEW_CountNumberEmployeesByDepartment
GO

CREATE VIEW VIEW_CountNumberEmployeesByDepartment
AS 
SELECT 		-- SumEmployeesByDeptLevel6 / SumEmployeesByDeptNeedRemoveZerosLevel5 / PivotingDeptNamePrepareForCountingEmployeesLevel4
SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Document Control' THEN 1 ELSE 0 END) AS dept_DocControl
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Engineering' THEN 1 ELSE 0 END) AS dept_Engin
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Executive' THEN 1 ELSE 0 END) AS dept_Exec
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Facilities and Maintenance' THEN 1 ELSE 0 END) AS dept_FacILMaint
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Finance' THEN 1 ELSE 0 END) AS dept_Finance
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Human Resources' THEN 1 ELSE 0 END) AS dept_HR
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Information Services' THEN 1 ELSE 0 END) AS dept_IT
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Marketing' THEN 1 ELSE 0 END) AS dept_Marketing
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Production' THEN 1 ELSE 0 END) AS dept_Prod
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Production Control' THEN 1 ELSE 0 END) AS dept_ProdControl
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Purchasing' THEN 1 ELSE 0 END) AS dept_Purch
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Quality Assurance' THEN 1 ELSE 0 END) AS dept_QA
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Research and Development' THEN 1 ELSE 0 END) AS dept_R_and_D
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Sales' THEN 1 ELSE 0 END) AS dept_Sales
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Shipping and Receiving' THEN 1 ELSE 0 END) AS dept_ShipReceiv
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Tool Design' THEN 1 ELSE 0 END) AS dept_ToolDesign
FROM (
	SELECT OriginalTables.DepartmentName				-- PrepareForCountingEmployeesLevel3 / RemovingDuplicatesLevel2
	, OriginalTables.BusinessEntityID
	, COUNT(*) AS EmployeeCountByDepartment
	FROM (
		SELECT									-- OriginalTablesLevel1
		ROW_NUMBER() OVER (PARTITION BY Employee.BusinessEntityID	ORDER BY Employee.BusinessEntityID ASC, EmployeeDepartmentHistory.StartDate DESC) AS RowNumberRemovingDuplicates
		, Employee.BusinessEntityID	
		, EmployeeDepartmentHistory.DepartmentID
		, Department.[Name] AS DepartmentName
		FROM [AdventureWorks2022].[HumanResources].[Employee] AS Employee
		LEFT JOIN [AdventureWorks2022].[HumanResources].[EmployeeDepartmentHistory] AS EmployeeDepartmentHistory
			ON Employee.BusinessEntityID = EmployeeDepartmentHistory.BusinessEntityID
		LEFT JOIN [AdventureWorks2022].[HumanResources].[Department] AS Department
			ON EmployeeDepartmentHistory.DepartmentID = Department.DepartmentID	
		WHERE Employee.BusinessEntityID <> 1					-- OriginalTablesLevel1
	) AS OriginalTables
	WHERE OriginalTables.RowNumberRemovingDuplicates = 1				-- RemovingDuplicatesLevel2
	GROUP BY OriginalTables.DepartmentName, OriginalTables.BusinessEntityID		-- PrepareForCountingEmployeesLevel3
) AS PivotDeptNames				-- SumEmployeesByDeptLevel6 / PivotingDeptNamePrepareForCountingEmployeesLevel4


	-- OUTPUT
Commands completed successfully.


	Query #1.1: We retrieve the contents of this view to verify the calculations are correct
	----------- 
SELECT * 
FROM VIEW_CountNumberEmployeesByDepartment

	-- OUTPUT
dept_DocControl	dept_Engin	dept_Exec	dept_FacILMaint	dept_Finance	dept_HR	dept_IT	dept_Marketing	dept_Prod	dept_ProdControl	dept_Purch	dept_QA	dept_R_and_D	dept_Sales	dept_ShipReceiv	dept_ToolDesign
5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
(end of results)
(1 row affected)



Now we will proceed to reverse the pivoting.

	Query #2: We use a Cartesian Product to reverse the pivoting by converting the columns into rows
	---------
SELECT Department.[Name]
, VIEW_CountNumberEmployeesByDepartment.dept_DocControl
, VIEW_CountNumberEmployeesByDepartment.dept_Engin
, VIEW_CountNumberEmployeesByDepartment.dept_Exec
, VIEW_CountNumberEmployeesByDepartment.dept_FacILMaint
, VIEW_CountNumberEmployeesByDepartment.dept_Finance
, VIEW_CountNumberEmployeesByDepartment.dept_HR
, VIEW_CountNumberEmployeesByDepartment.dept_IT
, VIEW_CountNumberEmployeesByDepartment.dept_Marketing
, VIEW_CountNumberEmployeesByDepartment.dept_Prod
, VIEW_CountNumberEmployeesByDepartment.dept_ProdControl
, VIEW_CountNumberEmployeesByDepartment.dept_Purch
, VIEW_CountNumberEmployeesByDepartment.dept_QA
, VIEW_CountNumberEmployeesByDepartment.dept_R_and_D
, VIEW_CountNumberEmployeesByDepartment.dept_Sales
, VIEW_CountNumberEmployeesByDepartment.dept_ShipReceiv
, VIEW_CountNumberEmployeesByDepartment.dept_ToolDesign
FROM VIEW_CountNumberEmployeesByDepartment
, [AdventureWorks2022].[HumanResources].[Department]


	-- OUTPUT
Name	dept_DocControl	dept_Engin	dept_Exec	dept_FacILMaint	dept_Finance	dept_HR	dept_IT	dept_Marketing	dept_Prod	dept_ProdControl	dept_Purch	dept_QA	dept_R_and_D	dept_Sales	dept_ShipReceiv	dept_ToolDesign
Document Control	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Engineering	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Executive	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Facilities and Maintenance	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Finance	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Human Resources	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Information Services	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Marketing	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Production	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Production Control	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Purchasing	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Quality Assurance	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Research and Development	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Sales	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Shipping and Receiving	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
Tool Design	5	6	1	7	10	6	10	9	179	6	12	6	4	18	6	4
(end of results)
(16 rows affected)


	Comments on above results:
The Cartesian Product allows us to generate combinations of paired values from each row of table #1 with each row of table #2.

Since this view has 16 columns (one for each department) we will need to create a Cartesian Product that allows us to transpose all 16 columns into 16 rows.
For this, we can use column "Department.[Name]" from table [AdventureWorks2022].[HumanResources].[Department] which has 16 rows. 

So, in our case, we have 2 tables:
a) table #1 contains 1 column with all 16 department names from table [AdventureWorks2022].[HumanResources].[Department]
b) table #2, our view, has 16 columns and 1 row.

Any combination of paired values between these 2 tables would look like a pair such as (value row #1 from table #1, value row #1 from table #2):
	(deptName1, column1)		(deptName1, column2)
	(deptName2, column1)		(deptName2, column2)
	(deptName3, column1)		(deptName3, column2)
	....................... TRUNCATED VALUES
	(deptName15, column1)		(deptName15, column2)
	(deptName16, column1)		(deptName16, column2)


Below is an example of how these combinations of paired values are created.

	Table #1 		Table #2			===>
column "Name"			column "dept_DocControl"		Combination of paired values
=============================	========================	===>	============================
Document Control			5				(Document Control, 5)
Engineering				5				(Engineering, 5)
Executive				5				(Executive, 5)
Facilities and Maintenance		5				(Facilities and Maintenance, 5)
Finance					5				(Finance, 5)
Human Resources				5				(Human Resources, 5)
Information Services			5				(Information Services, 5)
Marketing				5				(Marketing, 5)
Production				5				(Production, 5)
Production Control			5				(Production Control, 5)
Purchasing				5				(Purchasing, 5)
Quality Assurance			5				(Quality Assurance, 5)
Research and Development		5				(Research and Development, 5)
Sales					5				(Sales, 5)
Shipping and Receiving			5				(Shipping and Receiving, 5)
Tool Design				5				(Tool Design, 5)

	


	Query #2.1: We use the CASE statement to reduce the 16 columns of combinations of paired values generated into only 1 column containing the number of employees by department
	---------
SELECT Department.[Name]
, CASE Department.[Name]
	WHEN 'Document Control' THEN VIEW_CountNumberEmployeesByDepartment.dept_DocControl
	WHEN 'Engineering' THEN VIEW_CountNumberEmployeesByDepartment.dept_Engin
	WHEN 'Executive' THEN VIEW_CountNumberEmployeesByDepartment.dept_Exec
	WHEN 'Facilities and Maintenance' THEN VIEW_CountNumberEmployeesByDepartment.dept_FacILMaint
	WHEN 'Finance' THEN VIEW_CountNumberEmployeesByDepartment.dept_Finance
	WHEN 'Human Resources' THEN VIEW_CountNumberEmployeesByDepartment.dept_HR
	WHEN 'Information Services' THEN VIEW_CountNumberEmployeesByDepartment.dept_IT
	WHEN 'Marketing' THEN VIEW_CountNumberEmployeesByDepartment.dept_Marketing
	WHEN 'Production' THEN VIEW_CountNumberEmployeesByDepartment.dept_Prod
	WHEN 'Production Control' THEN VIEW_CountNumberEmployeesByDepartment.dept_ProdControl
	WHEN 'Purchasing' THEN VIEW_CountNumberEmployeesByDepartment.dept_Purch
	WHEN 'Quality Assurance' THEN VIEW_CountNumberEmployeesByDepartment.dept_QA
	WHEN 'Research and Development' THEN VIEW_CountNumberEmployeesByDepartment.dept_R_and_D
	WHEN 'Sales' THEN VIEW_CountNumberEmployeesByDepartment.dept_Sales
	WHEN 'Shipping and Receiving' THEN VIEW_CountNumberEmployeesByDepartment.dept_ShipReceiv
	WHEN 'Tool Design' THEN VIEW_CountNumberEmployeesByDepartment.dept_ToolDesign
	END AS CountEmployeeByDept
FROM VIEW_CountNumberEmployeesByDepartment
, [AdventureWorks2022].[HumanResources].[Department]


	-- OUTPUT
Name				CountEmployeeByDept
Document Control		5
Engineering			6
Executive			1
Facilities and Maintenance	7
Finance				10
Human Resources			6
Information Services		10
Marketing			9
Production			179
Production Control		6
Purchasing			12
Quality Assurance		6
Research and Development	4
Sales				18
Shipping and Receiving		6
Tool Design			4
(end of results)
(16 rows affected)
