Exercise #1: Pivoting query results of sales for year-to-year comparison 


Solution #1: We calculate the amount of sales and pivot them to facilitate year to year comparison (changes on amounts and percentages)

Table used: [AdventureWorks2022].[Sales].[SalesOrderHeader] AS SalesOrderHeader

	Query #1: We calculate the difference of sales amount on a yearly basis to compare data between periods
	-----------
SELECT				                                    		    -- DiffSalesAmountandPercentageLevel4
FORMAT(SalesPerYear.Sales2014 - SalesPerYear.Sales2013, '#,#.##;(#,#.##)') AS SalesAmountDiff_2014_2013
, FORMAT(SalesPerYear.Sales2013 - SalesPerYear.Sales2012, '#,#.##;(#,#.##)') AS SalesAmountDiff_2013_2012
, FORMAT(SalesPerYear.Sales2012 -SalesPerYear.Sales2011, '#,#.##;(#,#.##)') AS SalesAmountDiff_2012_2011
, FORMAT(1.0*SalesPerYear.Sales2014 / SalesPerYear.Sales2013 - 1, '#.##%;(#.##%)') AS SalesPercDiff_2014_2013
, FORMAT(1.0*SalesPerYear.Sales2013 / SalesPerYear.Sales2012 - 1, '#.##%;(#.##%)') AS SalesPercDiff_2013_2012
, FORMAT(1.0*SalesPerYear.Sales2012 / SalesPerYear.Sales2011 - 1, '#.##%;(#.##%)') AS SalesPercDiff_2012_2011
FROM (
	SELECT										-- SumSalesAmountPerYearPerSalesOrderIDLevel3 / SalesAmountPerYearPerSalesOrderIDLevel2
	SUM(CASE WHEN Sales.SalesYear = 2011 THEN Sales.SubTotal END) AS Sales2011
	, SUM(CASE WHEN Sales.SalesYear = 2012 THEN Sales.SubTotal END) AS Sales2012
	, SUM(CASE WHEN Sales.SalesYear = 2013 THEN Sales.SubTotal END) AS Sales2013
	, SUM(CASE WHEN Sales.SalesYear = 2014 THEN Sales.SubTotal END) AS Sales2014
	FROM (
		SELECT SalesOrderID									-- OriginalTablesLevel1
		, DATEPART(YEAR, OrderDate) AS SalesYear
		, SubTotal
		FROM [AdventureWorks2022].[Sales].[SalesOrderHeader] AS SalesOrderHeader		-- OriginalTablesLevel1
	) AS Sales									-- SumSalesAmountPerYearPerSalesOrderIDLevel3 / SalesAmountPerYearPerSalesOrderIDLevel2
) AS SalesPerYear									-- DiffSalesAmountandPercentageLevel4


	-- OUTPUT
SalesAmountDiff_2014_2013	SalesAmountDiff_2013_2012	SalesAmountDiff_2012_2011	SalesPercDiff_2014_2013		SalesPercDiff_2013_2012		SalesPercDiff_2012_2011
(23,564,550.24)			10,098,177.73			20,882,629.11			(54.02%)			30.12%				165.19%
(end of results)

Warning: Null value is eliminated by an aggregate or other SET operation.
(1 row affected)





Below are the queries used step-by-step for this solution.

	Query #1.1: We retrieve the amount for each SalesOrderID (before taxes and shipping costs)
	-----------
SELECT SalesOrderID									-- OriginalTablesLevel1
, DATEPART(YEAR, OrderDate) AS SalesYear
, SubTotal
FROM [AdventureWorks2022].[Sales].[SalesOrderHeader] AS SalesOrderHeader		-- OriginalTablesLevel1


	-- OUTPUT
SalesOrderID	SalesYear	SubTotal
43659		2011		20565.6206
43660		2011		1294.2529
43661		2011		32726.4786
43662		2011		28832.5289
43663		2011		419.4589
43664		2011		24432.6088
.............................................. TRUNCATED RESULTS .....
75117		2014		29.48
75118		2014		135.23
75119		2014		42.28
75120		2014		84.96
75121		2014		74.98
75122		2014		30.97
75123		2014		189.97
(end of results)
(31465 rows affected)




	Query #1.2: We pivot the sales amount for each SalesOrderID per each year using CASE statements
	-----------
SELECT Sales.SalesYear									-- SalesAmountPerYearPerSalesOrderIDLevel2
, CASE WHEN Sales.SalesYear = 2011 THEN Sales.SubTotal END AS Sales2011
, CASE WHEN Sales.SalesYear = 2012 THEN Sales.SubTotal END AS Sales2012
, CASE WHEN Sales.SalesYear = 2013 THEN Sales.SubTotal END AS Sales2013
, CASE WHEN Sales.SalesYear = 2014 THEN Sales.SubTotal END AS Sales2014
FROM (
	SELECT SalesOrderID								-- OriginalTablesLevel1
	, DATEPART(YEAR, OrderDate) AS SalesYear
	, SubTotal
	FROM [AdventureWorks2022].[Sales].[SalesOrderHeader] AS SalesOrderHeader	-- OriginalTablesLevel1
) AS Sales										-- SalesAmountPerYearPerSalesOrderIDLevel2


	-- OUTPUT
SalesYear	Sales2011		Sales2012	Sales2013	Sales2014
2011		20565.6206		NULL		NULL		NULL
2011		1294.2529		NULL		NULL		NULL
2011		32726.4786		NULL		NULL		NULL
2011		28832.5289		NULL		NULL		NULL
2011		419.4589		NULL		NULL		NULL
................................................................................. TRUNCATED RESULTS .....
2011		3374.99			NULL		NULL		NULL
2011		3374.99			NULL		NULL		NULL
2012		NULL			24509.8281	NULL		NULL
2012		NULL			3463.2998	NULL		NULL
................................................................................. TRUNCATED RESULTS .....
2012		NULL			1000.4375	NULL		NULL
2012		NULL			782.99		NULL		NULL
2013		NULL			NULL		2181.5625	NULL
2013		NULL			NULL		2443.35		NULL
................................................................................. TRUNCATED RESULTS .....
2013		NULL			NULL		2384.07		NULL
2013		NULL			NULL		2419.06		NULL
2014		NULL			NULL		NULL		27.28
2014		NULL			NULL		NULL		29.93
................................................................................. TRUNCATED RESULTS .....
2014		NULL			NULL		NULL		84.96
2014		NULL			NULL		NULL		74.98
2014		NULL			NULL		NULL		30.97
2014		NULL			NULL		NULL		189.97
(end of results)
(31465 rows affected)





	Query #1.3: We sum the sales amount for each year using CASE statements
	-----------
SELECT											-- SumSalesAmountPerYearPerSalesOrderIDLevel3 / SalesAmountPerYearPerSalesOrderIDLevel2
SUM(CASE WHEN Sales.SalesYear = 2011 THEN Sales.SubTotal END) AS Sales2011
, SUM(CASE WHEN Sales.SalesYear = 2012 THEN Sales.SubTotal END) AS Sales2012
, SUM(CASE WHEN Sales.SalesYear = 2013 THEN Sales.SubTotal END) AS Sales2013
, SUM(CASE WHEN Sales.SalesYear = 2014 THEN Sales.SubTotal END) AS Sales2014
FROM (
	SELECT SalesOrderID									-- OriginalTablesLevel1
	, DATEPART(YEAR, OrderDate) AS SalesYear
	, SubTotal
	FROM [AdventureWorks2022].[Sales].[SalesOrderHeader] AS SalesOrderHeader		-- OriginalTablesLevel1
) AS Sales										-- SumSalesAmountPerYearPerSalesOrderIDLevel3 / SalesAmountPerYearPerSalesOrderIDLevel2


	-- OUTPUT
Sales2011	Sales2012	Sales2013	Sales2014
12641672.2129	33524301.326	43622479.0537	20057928.8113
(end of results)

Warning: Null value is eliminated by an aggregate or other SET operation.
(1 row affected)



To compare data period over period, in this case year-to-year, we add 6 CASE statements:
1) difference of sales amount between 2014 and 2013,
2) difference of sales amount between 2013 and 2012,
3) difference of sales amount between 2012 and 2011,
4) percentual change of sales amount between 2014 and 2013,
5) percentual change of sales amount between 2013 and 2012,
6) percentual change of sales amount between 2012 and 2011.

See Query #1 showing the desired result.
