Exercise #1: Count the number of employees by department and pivot the results into a single row for department names.


Solution #1: We count the number of employees by department and pivot the results using ROWNUMBER (window) function , aggregation functions and CASE statements.


Tables used:
1) [AdventureWorks2022].[HumanResources].[Employee]
2) [AdventureWorks2022].[HumanResources].[EmployeeDepartmentHistory]
3) [AdventureWorks2022].[HumanResources].[Department]

	Query #1: We count the number of employees by department and pivot the results for every department
	---------
SELECT 						-- SumEmployeesByDeptLevel6 / SumEmployeesByDeptNeedRemoveZerosLevel5 / PivotingDeptNamePrepareForCountingEmployeesLevel4
SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Document Control' THEN 1 ELSE 0 END) AS dept_DocControl
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Engineering' THEN 1 ELSE 0 END) AS dept_Engin
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Executive' THEN 1 ELSE 0 END) AS dept_Exec
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Facilities and Maintenance' THEN 1 ELSE 0 END) AS dept_FacILMaint
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Finance' THEN 1 ELSE 0 END) AS dept_Finance
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Human Resources' THEN 1 ELSE 0 END) AS dept_HR
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Information Services' THEN 1 ELSE 0 END) AS dept_IT
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Marketing' THEN 1 ELSE 0 END) AS dept_Marketing
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Production' THEN 1 ELSE 0 END) AS dept_Prod
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Production Control' THEN 1 ELSE 0 END) AS dept_ProdControl
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Purchasing' THEN 1 ELSE 0 END) AS dept_Purch
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Quality Assurance' THEN 1 ELSE 0 END) AS dept_QA
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Research and Development' THEN 1 ELSE 0 END) AS dept_R_and_D
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Sales' THEN 1 ELSE 0 END) AS dept_Sales
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Shipping and Receiving' THEN 1 ELSE 0 END) AS dept_ShipReceiv
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Tool Design' THEN 1 ELSE 0 END) AS dept_ToolDesign
FROM (
	SELECT OriginalTables.DepartmentName						-- PrepareForCountingEmployeesLevel3 / RemovingDuplicatesLevel2
	, OriginalTables.BusinessEntityID
	, COUNT(*) AS EmployeeCountByDepartment
	FROM (
		SELECT									-- OriginalTablesLevel1
		ROW_NUMBER() OVER (PARTITION BY Employee.BusinessEntityID	ORDER BY Employee.BusinessEntityID ASC, EmployeeDepartmentHistory.StartDate DESC) AS RowNumberRemovingDuplicates
		, Employee.BusinessEntityID	
		, EmployeeDepartmentHistory.DepartmentID
		, Department.[Name] AS DepartmentName
		FROM [AdventureWorks2022].[HumanResources].[Employee] AS Employee
		LEFT JOIN [AdventureWorks2022].[HumanResources].[EmployeeDepartmentHistory] AS EmployeeDepartmentHistory
			ON Employee.BusinessEntityID = EmployeeDepartmentHistory.BusinessEntityID
		LEFT JOIN [AdventureWorks2022].[HumanResources].[Department] AS Department
			ON EmployeeDepartmentHistory.DepartmentID = Department.DepartmentID	
		WHERE Employee.BusinessEntityID <> 1					-- OriginalTablesLevel1
	) AS OriginalTables
	WHERE OriginalTables.RowNumberRemovingDuplicates = 1				-- RemovingDuplicatesLevel2
	GROUP BY OriginalTables.DepartmentName, OriginalTables.BusinessEntityID		-- PrepareForCountingEmployeesLevel3
) AS PivotDeptNames									-- SumEmployeesByDeptLevel6 / PivotingDeptNamePrepareForCountingEmployeesLevel4


	-- OUTPUT
dept_DocControl	dept_Engin	dept_Exec	dept_FacILMaint	dept_Finance	dept_HR	dept_IT	dept_Marketing	dept_Prod	dept_ProdControl	dept_Purch	dept_QA	dept_R_and_D	dept_Sales	dept_ShipReceiv	dept_ToolDesign
5		6		1		7		10		6	10	9		179		6			12		6	4		18		6		4
(end of results)
(16 rows affected)



Below are the queries used step-by-step for this solution.

	Query #1.1: We remove the duplicated BusinessEntityIDs for the employees that changed departments, in order to retrieve the list of (unique BusinessEntityIDs) employees
	-----------
SELECT OriginalTables.DepartmentName				-- RemovingDuplicatesLevel2
, OriginalTables.BusinessEntityID
FROM (
	SELECT										-- OriginalTablesLevel1
	ROW_NUMBER() OVER (PARTITION BY Employee.BusinessEntityID	ORDER BY Employee.BusinessEntityID ASC, EmployeeDepartmentHistory.StartDate DESC) AS RowNumberRemovingDuplicates
	, Employee.BusinessEntityID	
	, EmployeeDepartmentHistory.DepartmentID
	, Department.[Name] AS DepartmentName
	FROM [AdventureWorks2022].[HumanResources].[Employee] AS Employee
	LEFT JOIN [AdventureWorks2022].[HumanResources].[EmployeeDepartmentHistory] AS EmployeeDepartmentHistory
		ON Employee.BusinessEntityID = EmployeeDepartmentHistory.BusinessEntityID
	LEFT JOIN [AdventureWorks2022].[HumanResources].[Department] AS Department
		ON EmployeeDepartmentHistory.DepartmentID = Department.DepartmentID	
	WHERE Employee.BusinessEntityID <> 1						-- OriginalTablesLevel1
) AS OriginalTables
WHERE OriginalTables.RowNumberRemovingDuplicates = 1		-- RemovingDuplicatesLevel2

	-- OUTPUT
DeparmentName			BusinessEntityID
Engineering			2
Engineering			3
Tool Design			4
Engineering			5
Engineering			6
Research and Development	7
Research and Development	8
Research and Development	9
......................................... TRUNCATED RESULTS ......
Sales				286
Sales				287
Sales				288
Sales				289
Sales				290
(end of results)
(289 rows affected)



	Query #1.2: We add column "EmployeeCountByDepartment" to prepare for COUNTing and pivoting the results
	-----------
SELECT OriginalTables.DepartmentName						-- PrepareForCountingEmployeesLevel3 / RemovingDuplicatesLevel2
, OriginalTables.BusinessEntityID
, COUNT(*) AS EmployeeCountByDepartment
FROM (
	SELECT											-- OriginalTablesLevel1
	ROW_NUMBER() OVER (PARTITION BY Employee.BusinessEntityID	ORDER BY Employee.BusinessEntityID ASC, EmployeeDepartmentHistory.StartDate DESC) AS RowNumberRemovingDuplicates
	, Employee.BusinessEntityID	
	, EmployeeDepartmentHistory.DepartmentID
	, Department.[Name] AS DepartmentName
	FROM [AdventureWorks2022].[HumanResources].[Employee] AS Employee
	LEFT JOIN [AdventureWorks2022].[HumanResources].[EmployeeDepartmentHistory] AS EmployeeDepartmentHistory
		ON Employee.BusinessEntityID = EmployeeDepartmentHistory.BusinessEntityID
	LEFT JOIN [AdventureWorks2022].[HumanResources].[Department] AS Department
		ON EmployeeDepartmentHistory.DepartmentID = Department.DepartmentID	
	WHERE Employee.BusinessEntityID <> 1							-- OriginalTablesLevel1
) AS OriginalTables
WHERE OriginalTables.RowNumberRemovingDuplicates = 1					-- RemovingDuplicatesLevel2
GROUP BY OriginalTables.DepartmentName, OriginalTables.BusinessEntityID		-- PrepareForCountingEmployeesLevel3

	-- OUTPUT
DeparmentName			BusinessEntityID	EmployeeCountByDepartment
Engineering			2			1
Engineering			3			1
Tool Design			4			1
Engineering			5			1
Engineering			6			1
Research and Development	7			1
Research and Development	8			1
.................................................................................. TRUNCATED RESULTS ......
Sales				286			1
Sales				287			1
Sales				288			1
Sales				289			1
Sales				290			1
(end of results)
(289 rows affected)



	Query #1.3: We pivot the department names using CASE statements
	-----------
SELECT PivotDeptNames.DepartmentName				-- PivotingDeptNamePrepareForCountingEmployeesLevel4
, CASE WHEN PivotDeptNames.DepartmentName = 'Document Control' THEN 1 ELSE 0 END AS dept_DocControl
, CASE WHEN PivotDeptNames.DepartmentName = 'Engineering' THEN 1 ELSE 0 END AS dept_Engin
, CASE WHEN PivotDeptNames.DepartmentName = 'Executive' THEN 1 ELSE 0 END AS dept_Exec
, CASE WHEN PivotDeptNames.DepartmentName = 'Facilities and Maintenance' THEN 1 ELSE 0 END AS dept_FacILMaint
, CASE WHEN PivotDeptNames.DepartmentName = 'Finance' THEN 1 ELSE 0 END AS dept_Finance
, CASE WHEN PivotDeptNames.DepartmentName = 'Human Resources' THEN 1 ELSE 0 END AS dept_HR
, CASE WHEN PivotDeptNames.DepartmentName = 'Information Services' THEN 1 ELSE 0 END AS dept_IT
, CASE WHEN PivotDeptNames.DepartmentName = 'Marketing' THEN 1 ELSE 0 END AS dept_Marketing
, CASE WHEN PivotDeptNames.DepartmentName = 'Production' THEN 1 ELSE 0 END AS dept_Prod
, CASE WHEN PivotDeptNames.DepartmentName = 'Production Control' THEN 1 ELSE 0 END AS dept_ProdControl
, CASE WHEN PivotDeptNames.DepartmentName = 'Purchasing' THEN 1 ELSE 0 END AS dept_Purch
, CASE WHEN PivotDeptNames.DepartmentName = 'Quality Assurance' THEN 1 ELSE 0 END AS dept_QA
, CASE WHEN PivotDeptNames.DepartmentName = 'Research and Development' THEN 1 ELSE 0 END AS dept_R_and_D
, CASE WHEN PivotDeptNames.DepartmentName = 'Sales' THEN 1 ELSE 0 END AS dept_Sales
, CASE WHEN PivotDeptNames.DepartmentName = 'Shipping and Receiving' THEN 1 ELSE 0 END AS dept_ShipReceiv
, CASE WHEN PivotDeptNames.DepartmentName = 'Tool Design' THEN 1 ELSE 0 END AS dept_ToolDesign
FROM (
	SELECT OriginalTables.DepartmentName						-- PrepareForCountingEmployeesLevel3 / RemovingDuplicatesLevel2
	, OriginalTables.BusinessEntityID
	, COUNT(*) AS EmployeeCountByDepartment
	FROM (
		SELECT									-- OriginalTablesLevel1
		ROW_NUMBER() OVER (PARTITION BY Employee.BusinessEntityID	ORDER BY Employee.BusinessEntityID ASC, EmployeeDepartmentHistory.StartDate DESC) AS RowNumberRemovingDuplicates
		, Employee.BusinessEntityID	
		, EmployeeDepartmentHistory.DepartmentID
		, Department.[Name] AS DepartmentName
		FROM [AdventureWorks2022].[HumanResources].[Employee] AS Employee
		LEFT JOIN [AdventureWorks2022].[HumanResources].[EmployeeDepartmentHistory] AS EmployeeDepartmentHistory
			ON Employee.BusinessEntityID = EmployeeDepartmentHistory.BusinessEntityID
		LEFT JOIN [AdventureWorks2022].[HumanResources].[Department] AS Department
			ON EmployeeDepartmentHistory.DepartmentID = Department.DepartmentID	
		WHERE Employee.BusinessEntityID <> 1					-- OriginalTablesLevel1
	) AS OriginalTables
	WHERE OriginalTables.RowNumberRemovingDuplicates = 1				-- RemovingDuplicatesLevel2
	GROUP BY OriginalTables.DepartmentName, OriginalTables.BusinessEntityID		-- PrepareForCountingEmployeesLevel3
) AS PivotDeptNames						-- PivotingDeptNamePrepareForCountingEmployeesLevel4


	-- OUTPUT
DepartmentName		dept_DocControl	dept_Engin	dept_Exec	dept_FacILMaint	dept_Finance	dept_HR	dept_IT	dept_Marketing	dept_Prod	dept_ProdControl	dept_Purch	dept_QA	dept_R_and_D	dept_Sales	dept_ShipReceiv	dept_ToolDesign
Document Control	1		0		0		0		0		0	0	0		0		0			0		0	0		0		0		0
Document Control	1		0		0		0		0		0	0	0		0		0			0		0	0		0		0		0
Document Control	1		0		0		0		0		0	0	0		0		0			0		0	0		0		0		0
Document Control	1		0		0		0		0		0	0	0		0		0			0		0	0		0		0		0
Document Control	1		0		0		0		0		0	0	0		0		0			0		0	0		0		0		0
Engineering		0		1		0		0		0		0	0	0		0		0			0		0	0		0		0		0
........................................................................................................ TRUNCATED RESULTS ............................................................................................................................................
Shipping and Receiving	0		0		0		0		0		0	0	0		0		0			0		0	0		0		1		0
Shipping and Receiving	0		0		0		0		0		0	0	0		0		0			0		0	0		0		1		0
Shipping and Receiving	0		0		0		0		0		0	0	0		0		0			0		0	0		0		1		0
Tool Design		0		0		0		0		0		0	0	0		0		0			0		0	0		0		0		1
Tool Design		0		0		0		0		0		0	0	0		0		0			0		0	0		0		0		1
Tool Design		0		0		0		0		0		0	0	0		0		0			0		0	0		0		0		1
Tool Design		0		0		0		0		0		0	0	0		0		0			0		0	0		0		0		1
(end of results)
(289 rows affected)




	Query #1.4: We sum the number of employees for each department and prepare to remove zeros from the output
	-----------
SELECT									-- SumEmployeesByDeptNeedRemoveZerosLevel5 / PivotingDeptNamePrepareForCountingEmployeesLevel4
SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Document Control' THEN 1 ELSE 0 END) AS dept_DocControl
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Engineering' THEN 1 ELSE 0 END) AS dept_Engin
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Executive' THEN 1 ELSE 0 END) AS dept_Exec
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Facilities and Maintenance' THEN 1 ELSE 0 END) AS dept_FacILMaint
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Finance' THEN 1 ELSE 0 END) AS dept_Finance
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Human Resources' THEN 1 ELSE 0 END) AS dept_HR
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Information Services' THEN 1 ELSE 0 END) AS dept_IT
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Marketing' THEN 1 ELSE 0 END) AS dept_Marketing
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Production' THEN 1 ELSE 0 END) AS dept_Prod
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Production Control' THEN 1 ELSE 0 END) AS dept_ProdControl
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Purchasing' THEN 1 ELSE 0 END) AS dept_Purch
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Quality Assurance' THEN 1 ELSE 0 END) AS dept_QA
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Research and Development' THEN 1 ELSE 0 END) AS dept_R_and_D
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Sales' THEN 1 ELSE 0 END) AS dept_Sales
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Shipping and Receiving' THEN 1 ELSE 0 END) AS dept_ShipReceiv
, SUM(CASE WHEN PivotDeptNames.DepartmentName = 'Tool Design' THEN 1 ELSE 0 END) AS dept_ToolDesign
FROM (
	SELECT OriginalTables.DepartmentName					-- PrepareForCountingEmployeesLevel3 / RemovingDuplicatesLevel2
	, OriginalTables.BusinessEntityID
	, COUNT(*) AS EmployeeCountByDepartment
	FROM (
		SELECT											-- OriginalTablesLevel1
		ROW_NUMBER() OVER (PARTITION BY Employee.BusinessEntityID	ORDER BY Employee.BusinessEntityID ASC, EmployeeDepartmentHistory.StartDate DESC) AS RowNumberRemovingDuplicates
		, Employee.BusinessEntityID	
		, EmployeeDepartmentHistory.DepartmentID
		, Department.[Name] AS DepartmentName
		FROM [AdventureWorks2022].[HumanResources].[Employee] AS Employee
		LEFT JOIN [AdventureWorks2022].[HumanResources].[EmployeeDepartmentHistory] AS EmployeeDepartmentHistory
			ON Employee.BusinessEntityID = EmployeeDepartmentHistory.BusinessEntityID
		LEFT JOIN [AdventureWorks2022].[HumanResources].[Department] AS Department
			ON EmployeeDepartmentHistory.DepartmentID = Department.DepartmentID	
		WHERE Employee.BusinessEntityID <> 1							-- OriginalTablesLevel1
	) AS OriginalTables
	WHERE OriginalTables.RowNumberRemovingDuplicates = 1						-- RemovingDuplicatesLevel2
	GROUP BY OriginalTables.DepartmentName, OriginalTables.BusinessEntityID				-- PrepareForCountingEmployeesLevel3
) AS PivotDeptNames								-- PivotingDeptNamePrepareForCountingEmployeesLevel4
GROUP BY PivotDeptNames.DepartmentName					-- SumEmployeesByDeptNeedRemoveZerosLevel5


	-- OUTPUT
dept_DocControl	dept_Engin	dept_Exec	dept_FacILMaint	dept_Finance	dept_HR	dept_IT	dept_Marketing	dept_Prod	dept_ProdControl	dept_Purch	dept_QA	dept_R_and_D	dept_Sales	dept_ShipReceiv	dept_ToolDesign
5		0		0		0		0		0	0	0		0		0			0		0	0		0		0		0
0		6		0		0		0		0	0	0		0		0			0		0	0		0		0		0
0		0		1		0		0		0	0	0		0		0			0		0	0		0		0		0
0		0		0		7		0		0	0	0		0		0			0		0	0		0		0		0
0		0		0		0		10		0	0	0		0		0			0		0	0		0		0		0
0		0		0		0		0		6	0	0		0		0			0		0	0		0		0		0
0		0		0		0		0		0	10	0		0		0			0		0	0		0		0		0
0		0		0		0		0		0	0	9		0		0			0		0	0		0		0		0
0		0		0		0		0		0	0	0		179		0			0		0	0		0		0		0
0		0		0		0		0		0	0	0		0		6			0		0	0		0		0		0
0		0		0		0		0		0	0	0		0		0			12		0	0		0		0		0
0		0		0		0		0		0	0	0		0		0			0		6	0		0		0		0
0		0		0		0		0		0	0	0		0		0			0		0	4		0		0		0
0		0		0		0		0		0	0	0		0		0			0		0	0		18		0		0
0		0		0		0		0		0	0	0		0		0			0		0	0		0		6		0
0		0		0		0		0		0	0	0		0		0			0		0	0		0		0		4
(end of results)
(16 rows affected)


We remove the zeros from each column by removing the "GROUP BY PivotDeptNames.DepartmentName". 
See Query #1 showing the desired result.
